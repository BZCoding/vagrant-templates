# -*- mode: ruby -*-
# vi: set ft=ruby :

# A name for your project
PROJECT = 'docker-dev'

## Provision settings
## These settings have effect on provision
MEMORY = 512

VAGRANTFILE_API_VERSION = 2
Vagrant.require_version ">= 2.2.0"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Cache software packages
  if Vagrant.has_plugin?("vagrant-cachier")
     config.cache.enable :apt
     config.cache.enable :apt_lists
     config.cache.enable :composer
  end

  if Vagrant.has_plugin?("vagrant-hostmanager")
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.manage_guest = true
    config.hostmanager.ignore_private_ip = false
    config.hostmanager.include_offline = true
  end

  # Use custom key path, leave commented until after first provision
  # config.ssh.private_key_path = "#{ENV['HOME']}/.ssh/id_rsa"

  # VM definition
  config.vm.define PROJECT do |guest|

    # Box details
    # Note: consider hosting you own boxes (ie http://virtualboxes.loc/boxes/jessie64.box)
    guest.vm.box      = 'debian/stretch64'
    guest.vm.hostname = PROJECT

    # Networking setup
    guest.vm.network "private_network", type: "dhcp"

    # Share Docker port
    guest.vm.network :forwarded_port, guest: 2375, host: 2375
    guest.vm.network :forwarded_port, guest: 2376, host: 2376

    # Basic port forwarding (HTTP, HTTPS)
    guest.vm.network :forwarded_port, guest: 80, host: 8000, auto_correct: true
    guest.vm.network :forwarded_port, guest: 443, host: 8443, auto_correct: true

    # Standard Node/Ruby ports
    guest.vm.network :forwarded_port, guest: 3000, host: 3000, auto_correct: true
    guest.vm.network :forwarded_port, guest: 5000, host: 5000, auto_correct: true

    # MySQL/MongoDB ports
    guest.vm.network :forwarded_port, guest: 3306, host: 3306, auto_correct: true
    guest.vm.network :forwarded_port, guest: 27017, host: 27017, auto_correct: true

    # Share Home directory with the same path on VM (it may require your password on startup)
    # You could enable NFS sharing protocol, but it has some problems with Ruby bundle installs
    guest.vm.synced_folder ENV['HOME'], ENV['HOME'], id: "home" #, :nfs => true, :mount_options => ['nolock,vers=3,udp']

    # VM Provider specific settings for VirtualBox
    guest.vm.provider "virtualbox" do |vb|

      # Share VPN connections
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]

      vb.name = PROJECT

      # Customize the amount of memory on the VM:
      vb.memory = "#{MEMORY}"
    end

    # Add custom key
    guest.vm.provision :file, :source => "#{ENV['HOME']}/.ssh/id_rsa.pub", :destination => "/tmp/vagrantfile-pubkey"
    guest.vm.provision :shell, :privileged => false, :inline => <<-SHELL
      cat /tmp/vagrantfile-pubkey >> $HOME/.ssh/authorized_keys
      SHELL

    # Provisioning with Ansible
    guest.vm.provision "ansible" do |ansible|
      # Vagrant auto generates the inventory file, uncomment below to use yours
      # ansible.inventory_path = "hosts"
      ansible.playbook = "ansible/docker.yml"
      ansible.ask_vault_pass = false
      ansible.become = true
      ansible.compatibility_mode = '2.0'
      ansible.host_key_checking = false
      ansible.verbose = false
      ansible.groups = {
        "docker" => PROJECT
      }
      ansible.extra_vars = {
          "docker_users" => ['vagrant']
      }
    end
  end
end
